name: Build Python App for Linux (x86_64)

on:
  workflow_dispatch:  # Only allow manual run

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu as the build environment

    steps:
    # Step 1: Checkout the code from the repository
    - name: Checkout code
      uses: actions/checkout@v4  # Checks out the repository code

    # Step 2: Use Docker to simulate a low version glibc environment
    - name: Build executable with Docker (Ubuntu 18.04)
      run: |
        docker run --rm -v $(pwd):/workspace -w /workspace ubuntu:18.04 bash -c "
          apt-get update && apt-get install -y python3 python3-pip pyinstaller
          pip3 install -r requirements.txt  # Install dependencies from requirements.txt
          pyinstaller --onefile demo.py  # Build the executable with PyInstaller
        "

    # Step 3: Upload the generated executable as an artifact
    - name: Upload executable as artifact
      uses: actions/upload-artifact@v4  # Uploads the generated executable file as a GitHub Actions artifact
      with:
        name: demo-executable  # Name the artifact
        path: dist/demo  # Path to the generated executable file in the dist folder
